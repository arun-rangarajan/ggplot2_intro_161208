[
["index.html", "ggplot2: An Introduction 1 Background", " ggplot2: An Introduction Arun Rangarajan 2016-12-11 1 Background R has different plotting systems: base grid lattice ggplot2 ggplot2 - based on the good parts of other systems gg = Grammar of Graphics Based on Leland Wilkinson’s “The Grammar of Graphics” Developed in R by Hadley Wickham This presentation is based on [Wickham, 2016] and [Kabacoff, 2015] (with very little “original” content :-)) "],
["what-is-special-about-ggplot2.html", "2 What is special about ggplot2?", " 2 What is special about ggplot2? Deep underlying grammar (just like language grammar) Based on a simple set of core principles Good defaults Lots of options for customization Takes care of a lot of details (like legends, axes grids) Plots are made iteratively Easy to learn "],
["parts-of-a-ggplot.html", "3 Parts of a ggplot", " 3 Parts of a ggplot Data Aesthetics (aes) Color Shape Size Geometric Objects (geoms) Points Lines Polygons Statistical Transformations (stats) Histograms Boxplots Legends and Axes Coordinate system (coord) Cartesian Polar Faceting (aka latticing/trellising) Theme Background color Font size "],
["installation-and-loading.html", "4 Installation and Loading", " 4 Installation and Loading ggplot2 is not shipped with base R, so: install.packages(&quot;ggplot2&quot;) Load the library before use: library(ggplot2) "],
["data-set-to-explore.html", "5 Data Set to Explore", " 5 Data Set to Explore ggplot2 requires the data be provided in a data frame Example data frame to explore: mtcars dim(mtcars) ## [1] 32 11 head(mtcars) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 "],
["our-first-ggplot.html", "6 Our first ggplot", " 6 Our first ggplot ggplot2 uses the + symbol to chain functions library(ggplot2) ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point() "],
["parts-of-our-first-ggplot.html", "7 Parts of our first ggplot", " 7 Parts of our first ggplot ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point() ggplot() function initializes the plot Data frame specified in data param Variables specified in aes (aesthetics) param x-axis is wt y-axis is mpg geom specifies the visual output (geom_point() here produces scatter plot) "],
["adding-title-and-axes-labels.html", "8 Adding title and axes labels", " 8 Adding title and axes labels ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point() + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;) "],
["adding-colors-to-points.html", "9 Adding colors to points", " 9 Adding colors to points Color the points based on cyl column ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=cyl)) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;) cyl is a numeric field, so continuous colors "],
["adding-colors-to-points-cont.html", "10 Adding colors to points (cont…)", " 10 Adding colors to points (cont…) Convert cyl to factor ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl))) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;) "],
["changing-the-shapes.html", "11 Changing the shapes", " 11 Changing the shapes ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl))) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;) "],
["fix-the-legend.html", "12 Fix the legend", " 12 Fix the legend ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl))) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["increase-the-point-size.html", "13 Increase the point size", " 13 Increase the point size Do this outside aes ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["adding-a-loess-smoother.html", "14 Adding a loess smoother", " 14 Adding a loess smoother ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + geom_smooth() + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["remove-the-confidence-interval.html", "15 Remove the confidence interval", " 15 Remove the confidence interval ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + geom_smooth(se=FALSE) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["add-a-linear-fit.html", "16 Add a linear fit", " 16 Add a linear fit ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + geom_smooth(se=FALSE) + geom_smooth(method=&quot;lm&quot;, se=FALSE, color=&quot;purple&quot;, lty=2) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["one-fit-per-group.html", "17 One fit per group", " 17 One fit per group ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + geom_smooth(se=FALSE, aes(group=as.factor(cyl), color=as.factor(cyl))) + geom_smooth(method=&quot;lm&quot;, se=FALSE, lty=2, aes(group=as.factor(cyl), color=as.factor(cyl))) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) "],
["separate-the-groups-with-faceting.html", "18 Separate the groups with faceting", " 18 Separate the groups with faceting ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + geom_smooth(se=FALSE, aes(group=as.factor(cyl))) + geom_smooth(method=&quot;lm&quot;, se=FALSE, color=&quot;purple&quot;, lty=2, aes(group=as.factor(cyl))) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;) + # remove the legend theme(legend.position=&quot;none&quot;) + facet_wrap(~cyl) "],
["more-faceting.html", "19 More Faceting", " 19 More Faceting mtcars$am &lt;- factor(mtcars$am, levels=c(0, 1), labels=c(&quot;Auto&quot;, &quot;Manual&quot;)) mtcars$vs &lt;- factor(mtcars$vs, levels=c(0, 1), labels=c(&quot;V-Engine&quot;, &quot;Straight Engine&quot;)) mtcars$cyl &lt;- factor(mtcars$cyl) ggplot(mtcars, aes(x=hp, y=mpg, color=cyl, shape=cyl)) + geom_point(size=2) + facet_grid(am ~ vs) + labs(title=&quot;Auto Data by Engine and Transmission Type&quot;, x=&quot;Horsepower&quot;, y=&quot;mpg&quot;) "],
["boxplots.html", "20 Boxplots", " 20 Boxplots ggplot(mtcars) + geom_boxplot(aes(x=as.factor(cyl), y=mpg, fill=as.factor(cyl))) + labs(x=&quot;Cylinders&quot;) + theme(legend.position=&quot;none&quot;) "],
["violin-plots.html", "21 Violin Plots", " 21 Violin Plots ggplot(mtcars) + geom_violin(aes(x=as.factor(cyl), y=mpg, fill=as.factor(cyl))) + labs(x=&quot;Cylinders&quot;) + theme(legend.position=&quot;none&quot;) "],
["combine-boxplot-with-violin-plot.html", "22 Combine boxplot with violin plot", " 22 Combine boxplot with violin plot ggplot(mtcars) + geom_violin(aes(x=as.factor(cyl), y=mpg), fill=&quot;lightblue&quot;) + geom_boxplot(aes(x=as.factor(cyl), y=mpg), fill=&quot;lightgreen&quot;, width=0.1) + labs(x=&quot;Cylinders&quot;) + theme(legend.position=&quot;none&quot;) "],
["histogram.html", "23 Histogram", " 23 Histogram ggplot(mtcars) + geom_histogram(aes(mpg), binwidth=1) "],
["bar-plots.html", "24 Bar Plots", " 24 Bar Plots library(car) data(Salaries, package=&quot;car&quot;) head(Salaries, 2) ## rank discipline yrs.since.phd yrs.service sex salary ## 1 Prof B 19 18 Male 139750 ## 2 Prof B 20 16 Male 173200 ggplot(Salaries, aes(x=rank, fill=sex)) + geom_bar(position=&quot;stack&quot;) "],
["filled-bar-plots.html", "25 Filled Bar Plots", " 25 Filled Bar Plots ggplot(Salaries, aes(x=rank, fill=sex)) + geom_bar(position=&quot;fill&quot;) + # change the default y label &#39;count&#39; to &#39;proportion&#39; labs(y=&quot;proportion&quot;) "],
["changing-the-y-axis-breaks.html", "26 Changing the Y-axis breaks", " 26 Changing the Y-axis breaks ggplot(Salaries, aes(x=rank, fill=sex)) + geom_bar(position=&quot;fill&quot;, alpha=0.7) + labs(y=&quot;proportion&quot;) + scale_y_continuous(breaks=seq(0, 1, 0.1)) "],
["manual-colors.html", "27 Manual colors", " 27 Manual colors ggplot(Salaries, aes(x=rank, fill=sex)) + geom_bar(position=&quot;fill&quot;, alpha=0.7) + labs(y=&quot;proportion&quot;) + scale_y_continuous(breaks=seq(0, 1, 0.1)) + scale_fill_manual(values = c(&quot;brown&quot;, &quot;orange&quot;)) "],
["black-and-white-theme.html", "28 Black and White Theme", " 28 Black and White Theme ggplot(Salaries, aes(x=rank, fill=sex)) + geom_bar(position=&quot;fill&quot;, alpha=0.7) + labs(y=&quot;proportion&quot;) + scale_y_continuous(breaks=seq(0, 1, 0.1)) + scale_fill_manual(values = c(&quot;brown&quot;, &quot;orange&quot;)) + theme_bw() "],
["make-ggplot-interactive-with-plotly.html", "29 Make ggplot interactive with plotly", " 29 Make ggplot interactive with plotly library(plotly) p &lt;- ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl)), size=2) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) ggplotly(p) "],
["change-the-hover-text.html", "30 Change the hover text", " 30 Change the hover text library(plotly) mtcars$rowName &lt;- row.names(mtcars) p &lt;- ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point(aes(color=as.factor(cyl), shape=as.factor(cyl), text=paste(rowName)), size=3) + labs(title=&quot;Auto Data&quot;, x=&quot;Weight&quot;, y=&quot;Miles per Gallon&quot;, color=&quot;Cylinders&quot;, shape=&quot;Cylinders&quot;) ggplotly(p) "],
["learning-more.html", "Learning more", " Learning more Hadley Wickham, ggplot2: Elegant Graphics for Data Analysis, 2/e, Springer, 2016. Robert I Kabacoff, R in action, 2/e (ch 19), Manning, 2015. Roger Peng, Coursera: Exploratory Data Analysis Brian Caffo, Coursera: Developing Data Products ggplot2 docs: http://docs.ggplot2.org/current/ plotly: https://plot.ly/ggplot2/ "]
]
